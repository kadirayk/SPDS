name: Deploy Sparse SPDS

on: [workflow_dispatch]

jobs:
  deployment:
    runs-on: ubuntu-latest
    environment: Deploy
    name: Sparse SPDS deployment 
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      # Sets up Java version
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-package: 'jdk'
          java-version: '11'
          server-id: 'ossrh' # must match the serverId configured for the nexus-staging-maven-plugin
          server-username: OSSRH_USERNAME # Env var that holds your OSSRH user name
          server-password: OSSRH_PASSWORD # Env var that holds your OSSRH user pw
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # Substituted with the value stored in the referenced secret
          gpg-passphrase: SIGN_KEY_PASS # Env var that holds the key's passphrase
      - name: Deploy SPDS
        run: mvn -B -U clean deploy -Pdeployment -DskipTests
        env:
          SIGN_KEY_PASS: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
          OSSRH_USERNAME: ${{ secrets.SONATYPE_USER }}
          OSSRH_PASSWORD: ${{ secrets.SONATYPE_PW }}

  snapshot-version:
    runs-on: ubuntu-latest
    needs: deployment
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create branch and update to next SNAPSHOT version
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git checkout -b snapshot_version master
          mvn versions:set versions:commit -DnextSnapshot
          git ls-files | grep 'pom.xml$' | xargs git add
          git commit --allow-empty -am "Update version to next SNAPSHOT"
          git push origin snapshot_version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR for SNAPSHOT version
        run: |
          gh pr create -B develop -H version_${{ steps.versioning.outputs.version }}_SNAPSHOT -t "Update to next SNAPSHOT version" -b "Update to next SNAPSHOT version"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
